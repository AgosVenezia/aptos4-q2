{"ast":null,"code":"import { i as s } from \"./chunk-FTZGP6XW.mjs\";\nimport { b as c } from \"./chunk-4OV7QU2U.mjs\";\nimport { a as d } from \"./chunk-PRZ7AIGA.mjs\";\nimport { b as i } from \"./chunk-KM6UXNC7.mjs\";\nimport { b as n } from \"./chunk-QQIVWB6G.mjs\";\nvar u = class r extends c {\n  constructor(e, t) {\n    super(), this.jwkAddress = i.from(e), this.keylessPublicKey = t;\n  }\n  authKey() {\n    let e = new n();\n    return e.serializeU32AsUleb128(4), e.serializeFixedBytes(this.bcsToBytes()), d.fromSchemeAndBytes({\n      scheme: 2,\n      input: e.toUint8Array()\n    });\n  }\n  verifySignature(e) {\n    throw new Error(\"Not yet implemented\");\n  }\n  serialize(e) {\n    this.jwkAddress.serialize(e), this.keylessPublicKey.serialize(e);\n  }\n  static deserialize(e) {\n    let t = i.deserialize(e),\n      l = s.deserialize(e);\n    return new r(t, l);\n  }\n  static isPublicKey(e) {\n    return e instanceof r;\n  }\n  static create(e) {\n    return new r(e.jwkAddress, s.create(e));\n  }\n  static fromJwtAndPepper(e) {\n    return new r(e.jwkAddress, s.fromJwtAndPepper(e));\n  }\n  static isInstance(e) {\n    return \"jwkAddress\" in e && e.jwkAddress instanceof i && \"keylessPublicKey\" in e && e.keylessPublicKey instanceof s;\n  }\n};\nexport { u as a };\n//# sourceMappingURL=chunk-BOWPP6YG.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}