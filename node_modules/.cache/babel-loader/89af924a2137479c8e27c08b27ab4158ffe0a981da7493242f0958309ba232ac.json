{"ast":null,"code":"import { a as u } from \"./chunk-5S3Z7MT4.mjs\";\nimport { f as M } from \"./chunk-DMSHPWA5.mjs\";\nimport { c as R } from \"./chunk-KRVLR3L4.mjs\";\nimport { c as k } from \"./chunk-BVVHGSWC.mjs\";\nimport { A as V, m as O, y as q, z as G } from \"./chunk-VHNX2NUR.mjs\";\nimport { b as w, f as h, i as x, l as A, m as f, n as i, q as p, s as y } from \"./chunk-OTY3NO7Q.mjs\";\nimport { b as c } from \"./chunk-KM6UXNC7.mjs\";\nimport { a as _, c as d } from \"./chunk-IECDO22V.mjs\";\nimport { a as T, e as D } from \"./chunk-6FLHGOKP.mjs\";\nimport { d as E } from \"./chunk-56CNRT2K.mjs\";\nvar C = {\n    BOOLEAN: \"bool\",\n    U8: \"u8\",\n    U16: \"u16\",\n    U32: \"u32\",\n    U64: \"u64\",\n    U128: \"u128\",\n    U256: \"u256\",\n    ADDRESS: \"address\",\n    STRING: \"0x1::string::String\",\n    ARRAY: \"vector<u8>\"\n  },\n  l = \"0x4::token::Token\";\nasync function It(t) {\n  let {\n      aptosConfig: o,\n      digitalAssetAddress: n\n    } = t,\n    e = {\n      token_data_id: {\n        _eq: c.from(n).toStringLong()\n      }\n    };\n  return (await k({\n    aptosConfig: o,\n    query: {\n      query: V,\n      variables: {\n        where_condition: e\n      }\n    },\n    originMethod: \"getDigitalAssetData\"\n  })).current_token_datas_v2[0];\n}\nasync function Pt(t) {\n  let {\n      aptosConfig: o,\n      digitalAssetAddress: n\n    } = t,\n    e = {\n      token_data_id: {\n        _eq: c.from(n).toStringLong()\n      },\n      amount: {\n        _gt: 0\n      }\n    };\n  return (await k({\n    aptosConfig: o,\n    query: {\n      query: G,\n      variables: {\n        where_condition: e\n      }\n    },\n    originMethod: \"getCurrentDigitalAssetOwnership\"\n  })).current_token_ownerships_v2[0];\n}\nasync function bt(t) {\n  let {\n      aptosConfig: o,\n      ownerAddress: n,\n      options: e\n    } = t,\n    r = {\n      owner_address: {\n        _eq: c.from(n).toStringLong()\n      },\n      amount: {\n        _gt: 0\n      }\n    },\n    s = {\n      query: G,\n      variables: {\n        where_condition: r,\n        offset: e?.offset,\n        limit: e?.limit,\n        order_by: e?.orderBy\n      }\n    };\n  return (await k({\n    aptosConfig: o,\n    query: s,\n    originMethod: \"getOwnedDigitalAssets\"\n  })).current_token_ownerships_v2;\n}\nasync function St(t) {\n  let {\n      aptosConfig: o,\n      digitalAssetAddress: n,\n      options: e\n    } = t,\n    r = {\n      token_data_id: {\n        _eq: c.from(n).toStringLong()\n      }\n    },\n    s = {\n      query: q,\n      variables: {\n        where_condition: r,\n        offset: e?.offset,\n        limit: e?.limit,\n        order_by: e?.orderBy\n      }\n    };\n  return (await k({\n    aptosConfig: o,\n    query: s,\n    originMethod: \"getDigitalAssetActivity\"\n  })).token_activities_v2;\n}\nvar F = {\n  typeParameters: [],\n  parameters: [new i(p()), new h(), new i(p()), new i(p()), new w(), new w(), new w(), new w(), new w(), new w(), new w(), new w(), new w(), new h(), new h()]\n};\nasync function Dt(t) {\n  let {\n    aptosConfig: o,\n    options: n,\n    creator: e\n  } = t;\n  return u({\n    aptosConfig: o,\n    sender: e.accountAddress,\n    data: {\n      function: \"0x4::aptos_token::create_collection\",\n      functionArguments: [new d(t.description), new D(t.maxSupply ?? E), new d(t.name), new d(t.uri), new T(t.mutableDescription ?? !0), new T(t.mutableRoyalty ?? !0), new T(t.mutableURI ?? !0), new T(t.mutableTokenDescription ?? !0), new T(t.mutableTokenName ?? !0), new T(t.mutableTokenProperties ?? !0), new T(t.mutableTokenURI ?? !0), new T(t.tokensBurnableByCreator ?? !0), new T(t.tokensFreezableByCreator ?? !0), new D(t.royaltyNumerator ?? 0), new D(t.royaltyDenominator ?? 1)],\n      abi: F\n    },\n    options: n\n  });\n}\nasync function v(t) {\n  let {\n      aptosConfig: o,\n      options: n\n    } = t,\n    e = n?.where;\n  n?.tokenStandard && (e.token_standard = {\n    _eq: n?.tokenStandard ?? \"v2\"\n  });\n  let r = {\n    query: O,\n    variables: {\n      where_condition: e,\n      offset: n?.offset,\n      limit: n?.limit\n    }\n  };\n  return (await k({\n    aptosConfig: o,\n    query: r,\n    originMethod: \"getCollectionData\"\n  })).current_collections_v2[0];\n}\nasync function ht(t) {\n  let {\n      aptosConfig: o,\n      creatorAddress: n,\n      collectionName: e,\n      options: r\n    } = t,\n    s = c.from(n),\n    a = {\n      collection_name: {\n        _eq: e\n      },\n      creator_address: {\n        _eq: s.toStringLong()\n      }\n    };\n  return r?.tokenStandard && (a.token_standard = {\n    _eq: r?.tokenStandard ?? \"v2\"\n  }), v({\n    aptosConfig: o,\n    options: {\n      ...r,\n      where: a\n    }\n  });\n}\nasync function vt(t) {\n  let {\n      aptosConfig: o,\n      creatorAddress: n,\n      options: e\n    } = t,\n    s = {\n      creator_address: {\n        _eq: c.from(n).toStringLong()\n      }\n    };\n  return e?.tokenStandard && (s.token_standard = {\n    _eq: e?.tokenStandard ?? \"v2\"\n  }), v({\n    aptosConfig: o,\n    options: {\n      ...e,\n      where: s\n    }\n  });\n}\nasync function xt(t) {\n  let {\n      aptosConfig: o,\n      collectionId: n,\n      options: e\n    } = t,\n    s = {\n      collection_id: {\n        _eq: c.from(n).toStringLong()\n      }\n    };\n  return e?.tokenStandard && (s.token_standard = {\n    _eq: e?.tokenStandard ?? \"v2\"\n  }), v({\n    aptosConfig: o,\n    options: {\n      ...e,\n      where: s\n    }\n  });\n}\nasync function Gt(t) {\n  let {\n      creatorAddress: o,\n      collectionName: n,\n      options: e,\n      aptosConfig: r\n    } = t,\n    s = c.from(o),\n    a = {\n      collection_name: {\n        _eq: n\n      },\n      creator_address: {\n        _eq: s.toStringLong()\n      }\n    };\n  return e?.tokenStandard && (a.token_standard = {\n    _eq: e?.tokenStandard ?? \"v2\"\n  }), (await v({\n    aptosConfig: r,\n    options: {\n      where: a\n    }\n  })).collection_id;\n}\nvar N = {\n  typeParameters: [],\n  parameters: [new i(p()), new i(p()), new i(p()), new i(p()), new f(new i(p())), new f(new i(p())), new f(f.u8())]\n};\nasync function Bt(t) {\n  let {\n      aptosConfig: o,\n      options: n,\n      creator: e,\n      collection: r,\n      description: s,\n      name: a,\n      uri: m,\n      propertyKeys: g,\n      propertyTypes: P,\n      propertyValues: I\n    } = t,\n    b = P?.map(S => C[S]);\n  return u({\n    aptosConfig: o,\n    sender: e.accountAddress,\n    data: {\n      function: \"0x4::aptos_token::mint\",\n      functionArguments: [new d(r), new d(s), new d(a), new d(m), _.MoveString(g ?? []), _.MoveString(b ?? []), K(I ?? [], b ?? [])],\n      abi: N\n    },\n    options: n\n  });\n}\nvar Q = {\n  typeParameters: [{\n    constraints: [\"key\"]\n  }],\n  parameters: [new i(y(new A(0))), new x()]\n};\nasync function Et(t) {\n  let {\n    aptosConfig: o,\n    sender: n,\n    digitalAssetAddress: e,\n    recipient: r,\n    digitalAssetType: s,\n    options: a\n  } = t;\n  return u({\n    aptosConfig: o,\n    sender: n.accountAddress,\n    data: {\n      function: \"0x1::object::transfer\",\n      typeArguments: [s ?? l],\n      functionArguments: [c.from(e), c.from(r)],\n      abi: Q\n    },\n    options: a\n  });\n}\nvar Y = {\n  typeParameters: [],\n  parameters: [new i(p()), new i(p()), new i(p()), new i(p()), new f(new i(p())), new f(new i(p())), new f(f.u8()), new x()]\n};\nasync function Ot(t) {\n  let {\n    aptosConfig: o,\n    account: n,\n    collection: e,\n    description: r,\n    name: s,\n    uri: a,\n    recipient: m,\n    propertyKeys: g,\n    propertyTypes: P,\n    propertyValues: I,\n    options: b\n  } = t;\n  if (g?.length !== I?.length) throw new Error(\"Property keys and property values counts do not match\");\n  if (P?.length !== I?.length) throw new Error(\"Property types and property values counts do not match\");\n  let S = P?.map(U => C[U]);\n  return u({\n    aptosConfig: o,\n    sender: n.accountAddress,\n    data: {\n      function: \"0x4::aptos_token::mint_soul_bound\",\n      functionArguments: [e, r, s, a, _.MoveString(g ?? []), _.MoveString(S ?? []), K(I ?? [], S ?? []), m],\n      abi: Y\n    },\n    options: b\n  });\n}\nvar L = {\n  typeParameters: [{\n    constraints: [\"key\"]\n  }],\n  parameters: [new i(y(new A(0)))]\n};\nasync function qt(t) {\n  let {\n    aptosConfig: o,\n    creator: n,\n    digitalAssetAddress: e,\n    digitalAssetType: r,\n    options: s\n  } = t;\n  return u({\n    aptosConfig: o,\n    sender: n.accountAddress,\n    data: {\n      function: \"0x4::aptos_token::burn\",\n      typeArguments: [r ?? l],\n      functionArguments: [c.from(e)],\n      abi: L\n    },\n    options: s\n  });\n}\nvar z = {\n  typeParameters: [{\n    constraints: [\"key\"]\n  }],\n  parameters: [new i(y(new A(0)))]\n};\nasync function Vt(t) {\n  let {\n    aptosConfig: o,\n    creator: n,\n    digitalAssetAddress: e,\n    digitalAssetType: r,\n    options: s\n  } = t;\n  return u({\n    aptosConfig: o,\n    sender: n.accountAddress,\n    data: {\n      function: \"0x4::aptos_token::freeze_transfer\",\n      typeArguments: [r ?? l],\n      functionArguments: [e],\n      abi: z\n    },\n    options: s\n  });\n}\nvar j = {\n  typeParameters: [{\n    constraints: [\"key\"]\n  }],\n  parameters: [new i(y(new A(0)))]\n};\nasync function Rt(t) {\n  let {\n    aptosConfig: o,\n    creator: n,\n    digitalAssetAddress: e,\n    digitalAssetType: r,\n    options: s\n  } = t;\n  return u({\n    aptosConfig: o,\n    sender: n.accountAddress,\n    data: {\n      function: \"0x4::aptos_token::unfreeze_transfer\",\n      typeArguments: [r ?? l],\n      functionArguments: [e],\n      abi: j\n    },\n    options: s\n  });\n}\nvar W = {\n  typeParameters: [{\n    constraints: [\"key\"]\n  }],\n  parameters: [new i(y(new A(0))), new i(p())]\n};\nasync function Mt(t) {\n  let {\n    aptosConfig: o,\n    creator: n,\n    description: e,\n    digitalAssetAddress: r,\n    digitalAssetType: s,\n    options: a\n  } = t;\n  return u({\n    aptosConfig: o,\n    sender: n.accountAddress,\n    data: {\n      function: \"0x4::aptos_token::set_description\",\n      typeArguments: [s ?? l],\n      functionArguments: [c.from(r), new d(e)],\n      abi: W\n    },\n    options: a\n  });\n}\nvar X = {\n  typeParameters: [{\n    constraints: [\"key\"]\n  }],\n  parameters: [new i(y(new A(0))), new i(p())]\n};\nasync function Kt(t) {\n  let {\n    aptosConfig: o,\n    creator: n,\n    name: e,\n    digitalAssetAddress: r,\n    digitalAssetType: s,\n    options: a\n  } = t;\n  return u({\n    aptosConfig: o,\n    sender: n.accountAddress,\n    data: {\n      function: \"0x4::aptos_token::set_name\",\n      typeArguments: [s ?? l],\n      functionArguments: [c.from(r), new d(e)],\n      abi: X\n    },\n    options: a\n  });\n}\nvar H = {\n  typeParameters: [{\n    constraints: [\"key\"]\n  }],\n  parameters: [new i(y(new A(0))), new i(p())]\n};\nasync function Ut(t) {\n  let {\n    aptosConfig: o,\n    creator: n,\n    uri: e,\n    digitalAssetAddress: r,\n    digitalAssetType: s,\n    options: a\n  } = t;\n  return u({\n    aptosConfig: o,\n    sender: n.accountAddress,\n    data: {\n      function: \"0x4::aptos_token::set_uri\",\n      typeArguments: [s ?? l],\n      functionArguments: [c.from(r), new d(e)],\n      abi: H\n    },\n    options: a\n  });\n}\nvar J = {\n  typeParameters: [{\n    constraints: [\"key\"]\n  }],\n  parameters: [new i(y(new A(0))), new i(p()), new i(p()), f.u8()]\n};\nasync function Ft(t) {\n  let {\n    aptosConfig: o,\n    creator: n,\n    propertyKey: e,\n    propertyType: r,\n    propertyValue: s,\n    digitalAssetAddress: a,\n    digitalAssetType: m,\n    options: g\n  } = t;\n  return u({\n    aptosConfig: o,\n    sender: n.accountAddress,\n    data: {\n      function: \"0x4::aptos_token::add_property\",\n      typeArguments: [m ?? l],\n      functionArguments: [c.from(a), new d(e), new d(C[r]), _.U8(B(s, C[r]))],\n      abi: J\n    },\n    options: g\n  });\n}\nvar Z = {\n  typeParameters: [{\n    constraints: [\"key\"]\n  }],\n  parameters: [new i(y(new A(0))), new i(p())]\n};\nasync function Nt(t) {\n  let {\n    aptosConfig: o,\n    creator: n,\n    propertyKey: e,\n    digitalAssetAddress: r,\n    digitalAssetType: s,\n    options: a\n  } = t;\n  return u({\n    aptosConfig: o,\n    sender: n.accountAddress,\n    data: {\n      function: \"0x4::aptos_token::remove_property\",\n      typeArguments: [s ?? l],\n      functionArguments: [c.from(r), new d(e)],\n      abi: Z\n    },\n    options: a\n  });\n}\nvar $ = {\n  typeParameters: [{\n    constraints: [\"key\"]\n  }],\n  parameters: [new i(y(new A(0))), new i(p()), new i(p()), f.u8()]\n};\nasync function Qt(t) {\n  let {\n    aptosConfig: o,\n    creator: n,\n    propertyKey: e,\n    propertyType: r,\n    propertyValue: s,\n    digitalAssetAddress: a,\n    digitalAssetType: m,\n    options: g\n  } = t;\n  return u({\n    aptosConfig: o,\n    sender: n.accountAddress,\n    data: {\n      function: \"0x4::aptos_token::update_property\",\n      typeArguments: [m ?? l],\n      functionArguments: [c.from(a), new d(e), new d(C[r]), B(s, C[r])],\n      abi: $\n    },\n    options: g\n  });\n}\nvar tt = {\n  typeParameters: [{\n    constraints: [\"key\"]\n  }, {\n    constraints: []\n  }],\n  parameters: [new i(y(new A(0))), new i(p()), new A(1)]\n};\nasync function Yt(t) {\n  let {\n    aptosConfig: o,\n    creator: n,\n    propertyKey: e,\n    propertyType: r,\n    propertyValue: s,\n    digitalAssetAddress: a,\n    digitalAssetType: m,\n    options: g\n  } = t;\n  return u({\n    aptosConfig: o,\n    sender: n.accountAddress,\n    data: {\n      function: \"0x4::aptos_token::add_typed_property\",\n      typeArguments: [m ?? l, C[r]],\n      functionArguments: [c.from(a), new d(e), s],\n      abi: tt\n    },\n    options: g\n  });\n}\nvar et = {\n  typeParameters: [{\n    constraints: [\"key\"]\n  }, {\n    constraints: []\n  }],\n  parameters: [new i(y(new A(0))), new i(p()), new A(1)]\n};\nasync function Lt(t) {\n  let {\n    aptosConfig: o,\n    creator: n,\n    propertyKey: e,\n    propertyType: r,\n    propertyValue: s,\n    digitalAssetAddress: a,\n    digitalAssetType: m,\n    options: g\n  } = t;\n  return u({\n    aptosConfig: o,\n    sender: n.accountAddress,\n    data: {\n      function: \"0x4::aptos_token::update_typed_property\",\n      typeArguments: [m ?? l, C[r]],\n      functionArguments: [c.from(a), new d(e), s],\n      abi: et\n    },\n    options: g\n  });\n}\nfunction K(t, o) {\n  let n = new Array();\n  return o.forEach((e, r) => {\n    n.push(B(t[r], e));\n  }), n;\n}\nfunction B(t, o) {\n  let n = R(o);\n  return M(t, n, 0, []).bcsToBytes();\n}\nexport { It as a, Pt as b, bt as c, St as d, Dt as e, v as f, ht as g, vt as h, xt as i, Gt as j, Bt as k, Et as l, Ot as m, qt as n, Vt as o, Rt as p, Mt as q, Kt as r, Ut as s, Ft as t, Nt as u, Qt as v, Yt as w, Lt as x };\n//# sourceMappingURL=chunk-RNRNGJDA.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}