{"ast":null,"code":"import { a as c } from \"./chunk-5S3Z7MT4.mjs\";\nimport { c as p } from \"./chunk-KRVLR3L4.mjs\";\nimport { c as o } from \"./chunk-BVVHGSWC.mjs\";\nimport { n as u, q as g, r as A } from \"./chunk-VHNX2NUR.mjs\";\nimport { f as a, i as r } from \"./chunk-OTY3NO7Q.mjs\";\nasync function G(t) {\n  let {\n      aptosConfig: s,\n      options: e\n    } = t,\n    n = {\n      query: A,\n      variables: {\n        where_condition: e?.where,\n        limit: e?.limit,\n        offset: e?.offset\n      }\n    };\n  return (await o({\n    aptosConfig: s,\n    query: n,\n    originMethod: \"getFungibleAssetMetadata\"\n  })).fungible_asset_metadata;\n}\nasync function h(t) {\n  let {\n      aptosConfig: s,\n      options: e\n    } = t,\n    n = {\n      query: g,\n      variables: {\n        where_condition: e?.where,\n        limit: e?.limit,\n        offset: e?.offset\n      }\n    };\n  return (await o({\n    aptosConfig: s,\n    query: n,\n    originMethod: \"getFungibleAssetActivities\"\n  })).fungible_asset_activities;\n}\nasync function M(t) {\n  let {\n      aptosConfig: s,\n      options: e\n    } = t,\n    n = {\n      query: u,\n      variables: {\n        where_condition: e?.where,\n        limit: e?.limit,\n        offset: e?.offset\n      }\n    };\n  return (await o({\n    aptosConfig: s,\n    query: n,\n    originMethod: \"getCurrentFungibleAssetBalances\"\n  })).current_fungible_asset_balances;\n}\nvar b = {\n  typeParameters: [{\n    constraints: []\n  }],\n  parameters: [p(\"0x1::object::Object\"), new r(), new a()]\n};\nasync function x(t) {\n  let {\n    aptosConfig: s,\n    sender: e,\n    fungibleAssetMetadataAddress: n,\n    recipient: i,\n    amount: l,\n    options: f\n  } = t;\n  return c({\n    aptosConfig: s,\n    sender: e.accountAddress,\n    data: {\n      function: \"0x1::primary_fungible_store::transfer\",\n      typeArguments: [\"0x1::fungible_asset::Metadata\"],\n      functionArguments: [n, i, l],\n      abi: b\n    },\n    options: f\n  });\n}\nexport { G as a, h as b, M as c, x as d };\n//# sourceMappingURL=chunk-AT2ZGTXQ.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}