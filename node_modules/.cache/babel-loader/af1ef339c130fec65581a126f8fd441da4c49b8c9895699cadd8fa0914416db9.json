{"ast":null,"code":"import { b as p } from \"./chunk-2GEIHUHT.mjs\";\nasync function r(e) {\n  let {\n      aptosConfig: t,\n      overrides: s,\n      params: n,\n      contentType: o,\n      acceptType: i,\n      path: a,\n      originMethod: R,\n      type: d\n    } = e,\n    u = t.getRequestUrl(d);\n  return p({\n    url: u,\n    method: \"GET\",\n    originMethod: R,\n    path: a,\n    contentType: o,\n    acceptType: i,\n    params: n,\n    overrides: {\n      ...t.clientConfig,\n      ...s\n    }\n  }, t, e.type);\n}\nasync function m(e) {\n  let {\n    aptosConfig: t\n  } = e;\n  return r({\n    ...e,\n    type: \"Fullnode\",\n    overrides: {\n      ...t.clientConfig,\n      ...t.fullnodeConfig,\n      ...e.overrides,\n      HEADERS: {\n        ...t.clientConfig?.HEADERS,\n        ...t.fullnodeConfig?.HEADERS\n      }\n    }\n  });\n}\nasync function y(e) {\n  return r({\n    ...e,\n    type: \"Pepper\"\n  });\n}\nasync function A(e) {\n  let t = [],\n    s,\n    n = e.params;\n  do {\n    let o = await r({\n      type: \"Fullnode\",\n      aptosConfig: e.aptosConfig,\n      originMethod: e.originMethod,\n      path: e.path,\n      params: n,\n      overrides: e.overrides\n    });\n    s = o.headers[\"x-aptos-cursor\"], delete o.headers, t.push(...o.data), n.start = s;\n  } while (s != null);\n  return t;\n}\nexport { r as a, m as b, y as c, A as d };\n//# sourceMappingURL=chunk-RNJHULIT.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}