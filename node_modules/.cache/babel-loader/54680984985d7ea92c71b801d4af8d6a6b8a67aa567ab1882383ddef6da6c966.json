{"ast":null,"code":"import { a as c, b as o, c as d, d as z, e as m, f as U, g as y } from \"./chunk-6FLHGOKP.mjs\";\nimport { a as b } from \"./chunk-N47FTRYO.mjs\";\nimport { a as s } from \"./chunk-QQIVWB6G.mjs\";\nimport { b as u } from \"./chunk-KFNDDPOW.mjs\";\nvar t = class i extends s {\n    constructor(e) {\n      super(), this.values = e;\n    }\n    serializeForEntryFunction(e) {\n      let r = this.bcsToBytes();\n      e.serializeBytes(r);\n    }\n    serializeForScriptFunction(e) {\n      if (this.values[0] !== void 0 && !(this.values[0] instanceof o)) {\n        new p(this.bcsToBytes()).serializeForScriptFunction(e);\n        return;\n      }\n      e.serializeU32AsUleb128(4), e.serialize(this);\n    }\n    static U8(e) {\n      let r;\n      if (Array.isArray(e) && e.length === 0) r = [];else if (Array.isArray(e) && typeof e[0] == \"number\") r = e;else if (typeof e == \"string\") {\n        let n = u.fromHexInput(e);\n        r = Array.from(n.toUint8Array());\n      } else if (e instanceof Uint8Array) r = Array.from(e);else throw new Error(\"Invalid input type, must be an number[], Uint8Array, or hex string\");\n      return new i(r.map(n => new o(n)));\n    }\n    static U16(e) {\n      return new i(e.map(r => new d(r)));\n    }\n    static U32(e) {\n      return new i(e.map(r => new z(r)));\n    }\n    static U64(e) {\n      return new i(e.map(r => new m(r)));\n    }\n    static U128(e) {\n      return new i(e.map(r => new U(r)));\n    }\n    static U256(e) {\n      return new i(e.map(r => new y(r)));\n    }\n    static Bool(e) {\n      return new i(e.map(r => new c(r)));\n    }\n    static MoveString(e) {\n      return new i(e.map(r => new a(r)));\n    }\n    serialize(e) {\n      e.serializeVector(this.values);\n    }\n    static deserialize(e, r) {\n      let n = e.deserializeUleb128AsU32(),\n        l = new Array();\n      for (let w = 0; w < n; w += 1) l.push(r.deserialize(e));\n      return new i(l);\n    }\n  },\n  p = class i extends s {\n    constructor(e) {\n      super(), this.value = u.fromHexInput(e).toUint8Array();\n    }\n    serialize(e) {\n      e.serializeBytes(this.value);\n    }\n    serializeForEntryFunction(e) {\n      this.serialize(e);\n    }\n    serializeForScriptFunction(e) {\n      e.serializeU32AsUleb128(9), this.serialize(e);\n    }\n    static deserialize(e) {\n      return new i(e.deserializeBytes());\n    }\n    toMoveVector(e) {\n      let r = new b(this.bcsToBytes());\n      r.deserializeUleb128AsU32();\n      let n = r.deserializeVector(e);\n      return new t(n);\n    }\n  },\n  a = class i extends s {\n    constructor(e) {\n      super(), this.value = e;\n    }\n    serialize(e) {\n      e.serializeStr(this.value);\n    }\n    serializeForEntryFunction(e) {\n      let r = this.bcsToBytes();\n      e.serializeBytes(r);\n    }\n    serializeForScriptFunction(e) {\n      let n = new TextEncoder().encode(this.value);\n      t.U8(n).serializeForScriptFunction(e);\n    }\n    static deserialize(e) {\n      return new i(e.deserializeStr());\n    }\n  },\n  A = class i extends s {\n    constructor(e) {\n      super(), typeof e < \"u\" && e !== null ? this.vec = new t([e]) : this.vec = new t([]), [this.value] = this.vec.values;\n    }\n    serializeForEntryFunction(e) {\n      let r = this.bcsToBytes();\n      e.serializeBytes(r);\n    }\n    unwrap() {\n      if (this.isSome()) return this.vec.values[0];\n      throw new Error(\"Called unwrap on a MoveOption with no value\");\n    }\n    isSome() {\n      return this.vec.values.length === 1;\n    }\n    serialize(e) {\n      this.vec.serialize(e);\n    }\n    static U8(e) {\n      return new i(e != null ? new o(e) : void 0);\n    }\n    static U16(e) {\n      return new i(e != null ? new d(e) : void 0);\n    }\n    static U32(e) {\n      return new i(e != null ? new z(e) : void 0);\n    }\n    static U64(e) {\n      return new i(e != null ? new m(e) : void 0);\n    }\n    static U128(e) {\n      return new i(e != null ? new U(e) : void 0);\n    }\n    static U256(e) {\n      return new i(e != null ? new y(e) : void 0);\n    }\n    static Bool(e) {\n      return new i(e != null ? new c(e) : void 0);\n    }\n    static MoveString(e) {\n      return new i(e != null ? new a(e) : void 0);\n    }\n    static deserialize(e, r) {\n      let n = t.deserialize(e, r);\n      return new i(n.values[0]);\n    }\n  };\nexport { t as a, p as b, a as c, A as d };\n//# sourceMappingURL=chunk-IECDO22V.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}