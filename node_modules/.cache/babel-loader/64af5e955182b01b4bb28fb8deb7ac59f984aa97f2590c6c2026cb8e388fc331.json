{"ast":null,"code":"import { a as r } from \"./chunk-GQABU3RQ.mjs\";\nimport { a as d } from \"./chunk-2CGJLPHP.mjs\";\nasync function A(s, u) {\n  let {\n      url: t,\n      method: n,\n      body: i,\n      contentType: a,\n      params: o,\n      overrides: e,\n      originMethod: R\n    } = s,\n    p = {\n      ...e?.HEADERS,\n      \"x-aptos-client\": `aptos-typescript-sdk/${d}`,\n      \"content-type\": a ?? \"application/json\",\n      \"x-aptos-typescript-sdk-origin-method\": R\n    };\n  return e?.AUTH_TOKEN && (p.Authorization = `Bearer ${e?.AUTH_TOKEN}`), e?.API_KEY && (p.Authorization = `Bearer ${e?.API_KEY}`), u.provider({\n    url: t,\n    method: n,\n    body: i,\n    params: o,\n    headers: p,\n    overrides: e\n  });\n}\nasync function P(s, u, t) {\n  let {\n      url: n,\n      path: i\n    } = s,\n    a = i ? `${n}/${i}` : n,\n    o = await A({\n      ...s,\n      url: a\n    }, u.client),\n    e = {\n      status: o.status,\n      statusText: o.statusText ?? \"No status text provided\",\n      data: o.data,\n      headers: o.headers,\n      config: o.config,\n      request: o.request,\n      url: a\n    };\n  if (e.status === 401) throw new r({\n    apiType: t,\n    aptosRequest: s,\n    aptosResponse: e\n  });\n  if (t === \"Indexer\") {\n    let R = e.data;\n    if (R.errors) throw new r({\n      apiType: t,\n      aptosRequest: s,\n      aptosResponse: e\n    });\n    e.data = R.data;\n  } else if ((t === \"Pepper\" || t === \"Prover\") && e.status >= 400) throw new r({\n    apiType: t,\n    aptosRequest: s,\n    aptosResponse: e\n  });\n  if (e.status >= 200 && e.status < 300) return e;\n  throw new r({\n    apiType: t,\n    aptosRequest: s,\n    aptosResponse: e\n  });\n}\nexport { A as a, P as b };\n//# sourceMappingURL=chunk-2GEIHUHT.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}