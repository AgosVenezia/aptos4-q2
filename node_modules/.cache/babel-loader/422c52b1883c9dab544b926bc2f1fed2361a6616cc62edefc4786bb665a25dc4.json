{"ast":null,"code":"export class ClientError extends Error {\n  response;\n  request;\n  constructor(response, request) {\n    const message = `${ClientError.extractMessage(response)}: ${JSON.stringify({\n      response,\n      request\n    })}`;\n    super(message);\n    Object.setPrototypeOf(this, ClientError.prototype);\n    this.response = response;\n    this.request = request;\n    // this is needed as Safari doesn't support .captureStackTrace\n    if (typeof Error.captureStackTrace === `function`) {\n      Error.captureStackTrace(this, ClientError);\n    }\n  }\n  static extractMessage(response) {\n    return response.errors?.[0]?.message ?? `GraphQL Error (Code: ${String(response.status)})`;\n  }\n}\n//# sourceMappingURL=ClientError.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}