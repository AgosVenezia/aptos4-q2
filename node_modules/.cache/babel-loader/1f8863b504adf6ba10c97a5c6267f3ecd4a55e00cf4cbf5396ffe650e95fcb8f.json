{"ast":null,"code":"import { a as w } from \"./chunk-CDQGPCHU.mjs\";\nimport { a as f } from \"./chunk-WV2VJQDS.mjs\";\nimport { a as y } from \"./chunk-BOWPP6YG.mjs\";\nimport { n as u } from \"./chunk-FTZGP6XW.mjs\";\nimport { b as c } from \"./chunk-KM6UXNC7.mjs\";\nimport { a as l } from \"./chunk-N47FTRYO.mjs\";\nimport { jwtDecode as A } from \"jwt-decode\";\nvar K = class o extends w {\n  constructor(e) {\n    let r = y.create(e);\n    super({\n      publicKey: r,\n      ...e\n    }), this.publicKey = r;\n  }\n  serialize(e) {\n    if (this.proof === void 0) throw new Error(\"Cannot serialize - proof undefined\");\n    e.serializeStr(this.jwt), e.serializeStr(this.uidKey), e.serializeFixedBytes(this.pepper), this.publicKey.jwkAddress.serialize(e), this.ephemeralKeyPair.serialize(e), this.proof.serialize(e);\n  }\n  static deserialize(e) {\n    let r = e.deserializeStr(),\n      i = e.deserializeStr(),\n      s = e.deserializeFixedBytes(31),\n      a = c.deserialize(e),\n      d = f.deserialize(e),\n      n = u.deserialize(e);\n    return o.create({\n      proof: n,\n      pepper: s,\n      jwkAddress: a,\n      uidKey: i,\n      jwt: r,\n      ephemeralKeyPair: d\n    });\n  }\n  static fromBytes(e) {\n    return o.deserialize(new l(e));\n  }\n  static create(e) {\n    let {\n        address: r,\n        proof: i,\n        jwt: s,\n        ephemeralKeyPair: a,\n        pepper: d,\n        jwkAddress: n,\n        uidKey: p = \"sub\",\n        proofFetchCallback: m\n      } = e,\n      t = A(s);\n    if (typeof t.iss != \"string\") throw new Error(\"iss was not found\");\n    if (typeof t.aud != \"string\") throw new Error(\"aud was not found or an array of values\");\n    let h = t[p];\n    return new o({\n      address: r,\n      proof: i,\n      ephemeralKeyPair: a,\n      iss: t.iss,\n      uidKey: p,\n      uidVal: h,\n      aud: t.aud,\n      pepper: d,\n      jwkAddress: c.from(n),\n      jwt: s,\n      proofFetchCallback: m\n    });\n  }\n};\nexport { K as a };\n//# sourceMappingURL=chunk-GLATLXF6.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}