{"ast":null,"code":"import { c as s } from \"./chunk-BVVHGSWC.mjs\";\nimport { w as i, x as m } from \"./chunk-VHNX2NUR.mjs\";\nimport { b as n } from \"./chunk-2652SPOM.mjs\";\nasync function b(t) {\n  let {\n    aptosConfig: a,\n    handle: e,\n    data: o,\n    options: r\n  } = t;\n  return (await n({\n    aptosConfig: a,\n    originMethod: \"getTableItem\",\n    path: `tables/${e}/item`,\n    params: {\n      ledger_version: r?.ledgerVersion\n    },\n    body: o\n  })).data;\n}\nasync function f(t) {\n  let {\n      aptosConfig: a,\n      options: e\n    } = t,\n    o = {\n      query: i,\n      variables: {\n        where_condition: e?.where,\n        offset: e?.offset,\n        limit: e?.limit,\n        order_by: e?.orderBy\n      }\n    };\n  return (await s({\n    aptosConfig: a,\n    query: o,\n    originMethod: \"getTableItemsData\"\n  })).table_items;\n}\nasync function T(t) {\n  let {\n      aptosConfig: a,\n      options: e\n    } = t,\n    o = {\n      query: m,\n      variables: {\n        where_condition: e?.where,\n        offset: e?.offset,\n        limit: e?.limit,\n        order_by: e?.orderBy\n      }\n    };\n  return (await s({\n    aptosConfig: a,\n    query: o,\n    originMethod: \"getTableItemsMetadata\"\n  })).table_metadatas;\n}\nexport { b as a, f as b, T as c };\n//# sourceMappingURL=chunk-EE7GDBA5.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}