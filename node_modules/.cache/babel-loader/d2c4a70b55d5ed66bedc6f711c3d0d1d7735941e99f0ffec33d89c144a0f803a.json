{"ast":null,"code":"import { b as h, c as d, e as m } from \"./chunk-GMKKHGXK.mjs\";\nimport { a as p, b as u } from \"./chunk-OAEDFM7T.mjs\";\nimport { c as s } from \"./chunk-P3J54CQG.mjs\";\nimport { a as l } from \"./chunk-N47FTRYO.mjs\";\nimport { a as c } from \"./chunk-QQIVWB6G.mjs\";\nimport { b as y } from \"./chunk-KFNDDPOW.mjs\";\nimport { b, c as K } from \"./chunk-LEKBJ2EG.mjs\";\nimport { randomBytes as E } from \"@noble/hashes/utils\";\nvar S = 1209600,\n  i = class i extends c {\n    constructor(e) {\n      super();\n      let {\n        privateKey: r,\n        expiryDateSecs: a,\n        blinder: n\n      } = e;\n      this.privateKey = r, this.publicKey = new p(r.publicKey()), this.expiryDateSecs = a || K(b() + S), this.blinder = n !== void 0 ? y.fromHexInput(n).toUint8Array() : v();\n      let t = h(this.publicKey.bcsToBytes(), 93);\n      t.push(BigInt(this.expiryDateSecs)), t.push(d(this.blinder));\n      let x = m(t);\n      this.nonce = x.toString();\n    }\n    getPublicKey() {\n      return this.publicKey;\n    }\n    isExpired() {\n      return Math.floor(Date.now() / 1e3) > this.expiryDateSecs;\n    }\n    serialize(e) {\n      e.serializeU32AsUleb128(this.publicKey.variant), e.serializeBytes(this.privateKey.toUint8Array()), e.serializeU64(this.expiryDateSecs), e.serializeFixedBytes(this.blinder);\n    }\n    static deserialize(e) {\n      let r = e.deserializeUleb128AsU32(),\n        a;\n      switch (r) {\n        case 0:\n          a = s.deserialize(e);\n          break;\n        default:\n          throw new Error(`Unknown variant index for EphemeralPublicKey: ${r}`);\n      }\n      let n = e.deserializeU64(),\n        t = e.deserializeFixedBytes(31);\n      return new i({\n        privateKey: a,\n        expiryDateSecs: Number(n),\n        blinder: t\n      });\n    }\n    static fromBytes(e) {\n      return i.deserialize(new l(e));\n    }\n    static generate(e) {\n      let r;\n      switch (e?.scheme) {\n        case 0:\n        default:\n          r = s.generate();\n      }\n      return new i({\n        privateKey: r,\n        expiryDateSecs: e?.expiryDateSecs\n      });\n    }\n    sign(e) {\n      if (this.isExpired()) throw new Error(\"EphemeralKeyPair has expired\");\n      return new u(this.privateKey.sign(e));\n    }\n  };\ni.BLINDER_LENGTH = 31;\nvar o = i;\nfunction v() {\n  return E(o.BLINDER_LENGTH);\n}\nexport { o as a };\n//# sourceMappingURL=chunk-WV2VJQDS.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}