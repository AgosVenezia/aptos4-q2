{"ast":null,"code":"import { decode as c } from \"js-base64\";\nasync function m(e) {\n  return new Promise(n => {\n    setTimeout(n, e);\n  });\n}\nvar u = () => Math.floor(Date.now() / 1e3);\nfunction i(e) {\n  let n = new Date(e * 1e3);\n  return n.setMinutes(0), n.setSeconds(0), n.setMilliseconds(0), Math.floor(n.getTime() / 1e3);\n}\nfunction l(e) {\n  let n = e.replace(/-/g, \"+\").replace(/_/g, \"/\"),\n    t = n + \"==\".substring(0, (3 - n.length % 3) % 3);\n  return c(t);\n}\nvar g = (e, n) => e * 10 ** n,\n  p = (e, n) => e / 10 ** n,\n  r = e => {\n    let n = \"\";\n    for (let t = 2; t < e.length; t += 2) n += String.fromCharCode(parseInt(e.substring(t, t + 2), 16));\n    return n;\n  },\n  _ = e => {\n    let {\n        account_address: n,\n        module_name: t,\n        struct_name: o\n      } = e,\n      s = r(t),\n      a = r(o);\n    return `${n}::${s}::${a}`;\n  },\n  f = e => typeof e == \"object\" && !Array.isArray(e) && e !== null && \"account_address\" in e && \"module_name\" in e && \"struct_name\" in e && typeof e.account_address == \"string\" && typeof e.module_name == \"string\" && typeof e.struct_name == \"string\";\nexport { m as a, u as b, i as c, l as d, g as e, p as f, _ as g, f as h };\n//# sourceMappingURL=chunk-LEKBJ2EG.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}