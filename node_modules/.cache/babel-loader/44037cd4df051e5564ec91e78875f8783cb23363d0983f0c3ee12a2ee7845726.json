{"ast":null,"code":"// src/WalletSelector.tsx\nimport { ArrowLeftOutlined, ArrowRightOutlined } from \"@ant-design/icons\";\nimport { AboutAptosConnect, AptosPrivacyPolicy, WalletItem, groupAndSortWallets, isInstallRequired, truncateAddress, useWallet } from \"@aptos-labs/wallet-adapter-react\";\nimport { Button, Collapse, Divider, Flex, Modal, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar {\n  Text\n} = Typography;\nfunction WalletSelector({\n  isModalOpen,\n  setModalOpen,\n  ...walletSortingOptions\n}) {\n  const [walletSelectorModalOpen, setWalletSelectorModalOpen] = useState(false);\n  useEffect(() => {\n    if (isModalOpen !== void 0) {\n      setWalletSelectorModalOpen(isModalOpen);\n    }\n  }, [isModalOpen]);\n  const {\n    account,\n    connected,\n    disconnect,\n    wallets = []\n  } = useWallet();\n  const {\n    aptosConnectWallets,\n    availableWallets,\n    installableWallets\n  } = groupAndSortWallets(wallets, walletSortingOptions);\n  const hasAptosConnectWallets = !!aptosConnectWallets.length;\n  const onWalletButtonClick = () => {\n    if (connected) {\n      disconnect();\n    } else {\n      setWalletSelectorModalOpen(true);\n    }\n  };\n  const closeModal = () => {\n    setWalletSelectorModalOpen(false);\n    if (setModalOpen) {\n      setModalOpen(false);\n    }\n  };\n  const buttonText = (account == null ? void 0 : account.ansName) || truncateAddress(account == null ? void 0 : account.address) || \"Unknown\";\n  const modalProps = {\n    centered: true,\n    open: walletSelectorModalOpen,\n    onCancel: closeModal,\n    footer: null,\n    zIndex: 9999,\n    className: \"wallet-selector-modal\"\n  };\n  const renderEducationScreens = screen => /* @__PURE__ */jsxs(Modal, {\n    ...modalProps,\n    afterClose: screen.cancel,\n    title: /* @__PURE__ */jsxs(\"div\", {\n      className: \"about-aptos-connect-header\",\n      children: [/* @__PURE__ */jsx(Button, {\n        type: \"text\",\n        icon: /* @__PURE__ */jsx(ArrowLeftOutlined, {}),\n        onClick: screen.cancel\n      }), /* @__PURE__ */jsx(\"div\", {\n        className: \"wallet-modal-title\",\n        children: \"About Aptos Connect\"\n      })]\n    }),\n    children: [/* @__PURE__ */jsx(\"div\", {\n      className: \"about-aptos-connect-graphic-wrapper\",\n      children: /* @__PURE__ */jsx(screen.Graphic, {})\n    }), /* @__PURE__ */jsxs(\"div\", {\n      className: \"about-aptos-connect-text-wrapper\",\n      children: [/* @__PURE__ */jsx(screen.Title, {\n        className: \"about-aptos-connect-title\"\n      }), /* @__PURE__ */jsx(screen.Description, {\n        className: \"about-aptos-connect-description\"\n      })]\n    }), /* @__PURE__ */jsxs(\"div\", {\n      className: \"about-aptos-connect-footer-wrapper\",\n      children: [/* @__PURE__ */jsx(Button, {\n        type: \"text\",\n        style: {\n          justifySelf: \"start\"\n        },\n        onClick: screen.back,\n        children: \"Back\"\n      }), /* @__PURE__ */jsx(\"div\", {\n        className: \"about-aptos-connect-screen-indicators-wrapper\",\n        children: screen.screenIndicators.map((ScreenIndicator, i) => /* @__PURE__ */jsx(ScreenIndicator, {\n          className: \"about-aptos-connect-screen-indicator\",\n          children: /* @__PURE__ */jsx(\"div\", {})\n        }, i))\n      }), /* @__PURE__ */jsx(Button, {\n        type: \"text\",\n        icon: /* @__PURE__ */jsx(ArrowRightOutlined, {}),\n        iconPosition: \"end\",\n        style: {\n          justifySelf: \"end\"\n        },\n        onClick: screen.next,\n        children: screen.screenIndex === screen.totalScreens - 1 ? \"Finish\" : \"Next\"\n      })]\n    })]\n  });\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsx(Button, {\n      className: \"wallet-button\",\n      onClick: onWalletButtonClick,\n      children: connected ? buttonText : \"Connect Wallet\"\n    }), /* @__PURE__ */jsx(AboutAptosConnect, {\n      renderEducationScreen: renderEducationScreens,\n      children: /* @__PURE__ */jsx(Modal, {\n        ...modalProps,\n        title: /* @__PURE__ */jsx(\"div\", {\n          className: \"wallet-modal-title\",\n          children: hasAptosConnectWallets ? /* @__PURE__ */jsxs(Fragment, {\n            children: [/* @__PURE__ */jsx(\"span\", {\n              children: \"Log in or sign up\"\n            }), /* @__PURE__ */jsx(\"span\", {\n              children: \"with Social + Aptos Connect\"\n            })]\n          }) : \"Connect Wallet\"\n        }),\n        children: !connected && /* @__PURE__ */jsxs(Fragment, {\n          children: [hasAptosConnectWallets && /* @__PURE__ */jsxs(Flex, {\n            vertical: true,\n            gap: 12,\n            children: [aptosConnectWallets.map(wallet => /* @__PURE__ */jsx(AptosConnectWalletRow, {\n              wallet,\n              onConnect: closeModal\n            }, wallet.name)), /* @__PURE__ */jsxs(\"p\", {\n              className: \"about-aptos-connect-trigger-wrapper\",\n              children: [\"Learn more about\", \" \", /* @__PURE__ */jsxs(AboutAptosConnect.Trigger, {\n                className: \"about-aptos-connect-trigger\",\n                children: [\"Aptos Connect\", /* @__PURE__ */jsx(ArrowRightOutlined, {})]\n              })]\n            }), /* @__PURE__ */jsxs(AptosPrivacyPolicy, {\n              className: \"aptos-connect-privacy-policy-wrapper\",\n              children: [/* @__PURE__ */jsxs(\"p\", {\n                className: \"aptos-connect-privacy-policy-text\",\n                children: [/* @__PURE__ */jsx(AptosPrivacyPolicy.Disclaimer, {}), \" \", /* @__PURE__ */jsx(AptosPrivacyPolicy.Link, {\n                  className: \"aptos-connect-privacy-policy-link\"\n                }), /* @__PURE__ */jsx(\"span\", {\n                  children: \".\"\n                })]\n              }), /* @__PURE__ */jsx(AptosPrivacyPolicy.PoweredBy, {\n                className: \"aptos-connect-powered-by\"\n              })]\n            }), /* @__PURE__ */jsx(Divider, {\n              children: \"Or\"\n            })]\n          }), /* @__PURE__ */jsx(Flex, {\n            vertical: true,\n            gap: 12,\n            children: availableWallets.map(wallet => /* @__PURE__ */jsx(WalletRow, {\n              wallet,\n              onConnect: closeModal\n            }, wallet.name))\n          }), !!installableWallets.length && /* @__PURE__ */jsx(Collapse, {\n            ghost: true,\n            expandIconPosition: \"end\",\n            items: [{\n              key: \"more-wallets\",\n              label: \"More Wallets\",\n              children: /* @__PURE__ */jsx(Flex, {\n                vertical: true,\n                gap: 12,\n                children: installableWallets.map(wallet => /* @__PURE__ */jsx(WalletRow, {\n                  wallet,\n                  onConnect: closeModal\n                }, wallet.name))\n              })\n            }]\n          })]\n        })\n      })\n    })]\n  });\n}\nfunction WalletRow({\n  wallet,\n  onConnect\n}) {\n  return /* @__PURE__ */jsx(WalletItem, {\n    wallet,\n    onConnect,\n    asChild: true,\n    children: /* @__PURE__ */jsxs(\"div\", {\n      className: \"wallet-menu-wrapper\",\n      children: [/* @__PURE__ */jsxs(\"div\", {\n        className: \"wallet-name-wrapper\",\n        children: [/* @__PURE__ */jsx(WalletItem.Icon, {\n          className: \"wallet-selector-icon\"\n        }), /* @__PURE__ */jsx(WalletItem.Name, {\n          asChild: true,\n          children: /* @__PURE__ */jsx(Text, {\n            className: \"wallet-selector-text\",\n            children: wallet.name\n          })\n        })]\n      }), isInstallRequired(wallet) ? /* @__PURE__ */jsx(WalletItem.InstallLink, {\n        className: \"wallet-connect-install\"\n      }) : /* @__PURE__ */jsx(WalletItem.ConnectButton, {\n        asChild: true,\n        children: /* @__PURE__ */jsx(Button, {\n          className: \"wallet-connect-button\",\n          children: \"Connect\"\n        })\n      })]\n    })\n  });\n}\nfunction AptosConnectWalletRow({\n  wallet,\n  onConnect\n}) {\n  return /* @__PURE__ */jsx(WalletItem, {\n    wallet,\n    onConnect,\n    asChild: true,\n    children: /* @__PURE__ */jsx(WalletItem.ConnectButton, {\n      asChild: true,\n      children: /* @__PURE__ */jsxs(Button, {\n        size: \"large\",\n        className: \"aptos-connect-button\",\n        children: [/* @__PURE__ */jsx(WalletItem.Icon, {\n          className: \"wallet-selector-icon\"\n        }), /* @__PURE__ */jsx(WalletItem.Name, {})]\n      })\n    })\n  });\n}\nexport { WalletSelector };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}