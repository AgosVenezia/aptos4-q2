{"ast":null,"code":"var _jsxFileName = \"/workspaces/aptos4-q2/src/pages/MarketView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, Radio, message, Card, Row, Col, Pagination, Tag, Button, Modal } from \"antd\";\nimport { AptosClient } from \"aptos\";\nimport { useWallet } from \"@aptos-labs/wallet-adapter-react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst {\n  Meta\n} = Card;\nconst client = new AptosClient(\"https://fullnode.devnet.aptoslabs.com/v1\");\nconst rarityColors = {\n  1: \"green\",\n  2: \"blue\",\n  3: \"purple\",\n  4: \"orange\"\n};\nconst rarityLabels = {\n  1: \"Common\",\n  2: \"Uncommon\",\n  3: \"Rare\",\n  4: \"Super Rare\"\n};\nconst truncateAddress = (address, start = 6, end = 4) => {\n  return `${address.slice(0, start)}...${address.slice(-end)}`;\n};\nconst MarketView = ({\n  marketplaceAddr\n}) => {\n  _s();\n  const {\n    signAndSubmitTransaction\n  } = useWallet();\n  const [nfts, setNfts] = useState([]);\n  const [rarity, setRarity] = useState('all');\n  const [currentPage, setCurrentPage] = useState(1);\n  const pageSize = 8;\n  const [isBuyModalVisible, setIsBuyModalVisible] = useState(false);\n  const [selectedNft, setSelectedNft] = useState(null);\n  useEffect(() => {\n    handleFetchNfts(undefined);\n  }, []);\n  const handleFetchNfts = async selectedRarity => {\n    try {\n      const response = await client.getAccountResource(marketplaceAddr, \"0xd6fec6c68926c0da0ec99aac9318eb234c2774be6457dd97c73c0e33de8d29c4::NFTMarketplace::Marketplace\");\n      const nftList = response.data.nfts;\n      const hexToUint8Array = hexString => {\n        const bytes = new Uint8Array(hexString.length / 2);\n        for (let i = 0; i < hexString.length; i += 2) {\n          bytes[i / 2] = parseInt(hexString.substr(i, 2), 16);\n        }\n        return bytes;\n      };\n      const decodedNfts = nftList.map(nft => ({\n        ...nft,\n        name: new TextDecoder().decode(hexToUint8Array(nft.name.slice(2))),\n        description: new TextDecoder().decode(hexToUint8Array(nft.description.slice(2))),\n        uri: new TextDecoder().decode(hexToUint8Array(nft.uri.slice(2))),\n        price: nft.price / 100000000\n      }));\n\n      // Filter NFTs based on `for_sale` property and rarity if selected\n      const filteredNfts = decodedNfts.filter(nft => nft.for_sale && (selectedRarity === undefined || nft.rarity === selectedRarity));\n      setNfts(filteredNfts);\n      setCurrentPage(1);\n    } catch (error) {\n      console.error(\"Error fetching NFTs by rarity:\", error);\n      message.error(\"Failed to fetch NFTs.\");\n    }\n  };\n  const handleBuyClick = nft => {\n    setSelectedNft(nft);\n    setIsBuyModalVisible(true);\n  };\n  const handleCancelBuy = () => {\n    setIsBuyModalVisible(false);\n    setSelectedNft(null);\n  };\n  const handleConfirmPurchase = async () => {\n    if (!selectedNft) return;\n    try {\n      const priceInOctas = selectedNft.price * 100000000;\n      const entryFunctionPayload = {\n        type: \"entry_function_payload\",\n        function: `${marketplaceAddr}::NFTMarketplace::purchase_nft`,\n        type_arguments: [],\n        arguments: [marketplaceAddr, selectedNft.id.toString(), priceInOctas.toString()]\n      };\n      const response = await window.aptos.signAndSubmitTransaction(entryFunctionPayload);\n      await client.waitForTransaction(response.hash);\n      message.success(\"NFT purchased successfully!\");\n      setIsBuyModalVisible(false);\n      handleFetchNfts(rarity === 'all' ? undefined : rarity); // Refresh NFT list\n      console.log(\"signAndSubmitTransaction:\", signAndSubmitTransaction);\n    } catch (error) {\n      console.error(\"Error purchasing NFT:\", error);\n      message.error(\"Failed to purchase NFT.\");\n    }\n  };\n  const paginatedNfts = nfts.slice((currentPage - 1) * pageSize, currentPage * pageSize);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 2,\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: \"Marketplace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n        value: rarity,\n        onChange: e => {\n          const selectedRarity = e.target.value;\n          setRarity(selectedRarity);\n          handleFetchNfts(selectedRarity === 'all' ? undefined : selectedRarity);\n        },\n        buttonStyle: \"solid\",\n        children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: \"all\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: 1,\n          children: \"Common\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: 2,\n          children: \"Uncommon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: 3,\n          children: \"Rare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: 4,\n          children: \"Super Rare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [24, 24],\n      style: {\n        marginTop: 20,\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        // Center row content\n        flexWrap: \"wrap\"\n      },\n      children: paginatedNfts.map(nft => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        md: 8,\n        lg: 6,\n        xl: 6,\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          // Center the single card horizontally\n          alignItems: \"center\" // Center content in both directions\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          hoverable: true,\n          style: {\n            width: \"100%\",\n            // Make the card responsive\n            maxWidth: \"240px\",\n            // Limit the card width on larger screens\n            margin: \"0 auto\"\n          },\n          cover: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: nft.name,\n            src: nft.uri\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 22\n          }, this),\n          actions: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            onClick: () => handleBuyClick(nft),\n            children: \"Buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this)],\n          children: [/*#__PURE__*/_jsxDEV(Tag, {\n            color: rarityColors[nft.rarity],\n            style: {\n              fontSize: \"14px\",\n              fontWeight: \"bold\",\n              marginBottom: \"10px\"\n            },\n            children: rarityLabels[nft.rarity]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Meta, {\n            title: nft.name,\n            description: `Price: ${nft.price} APT`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: nft.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"ID: \", nft.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Owner: \", truncateAddress(nft.owner)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)\n      }, nft.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 30,\n        marginBottom: 30\n      },\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        current: currentPage,\n        pageSize: pageSize,\n        total: nfts.length,\n        onChange: page => setCurrentPage(page),\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Purchase NFT\",\n      visible: isBuyModalVisible,\n      onCancel: handleCancelBuy,\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCancelBuy,\n        children: \"Cancel\"\n      }, \"cancel\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleConfirmPurchase,\n        children: \"Confirm Purchase\"\n      }, \"confirm\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)],\n      children: selectedNft && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"NFT ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 16\n          }, this), \" \", selectedNft.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 16\n          }, this), \" \", selectedNft.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 16\n          }, this), \" \", selectedNft.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Rarity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 16\n          }, this), \" \", rarityLabels[selectedNft.rarity]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 16\n          }, this), \" \", selectedNft.price, \" APT\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Owner:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 16\n          }, this), \" \", truncateAddress(selectedNft.owner)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(MarketView, \"cUAqfgBfmYkSPImk/EAlA/lQMNY=\", false, function () {\n  return [useWallet];\n});\n_c = MarketView;\nexport default MarketView;\nvar _c;\n$RefreshReg$(_c, \"MarketView\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Radio","message","Card","Row","Col","Pagination","Tag","Button","Modal","AptosClient","useWallet","jsxDEV","_jsxDEV","Fragment","_Fragment","Title","Meta","client","rarityColors","rarityLabels","truncateAddress","address","start","end","slice","MarketView","marketplaceAddr","_s","signAndSubmitTransaction","nfts","setNfts","rarity","setRarity","currentPage","setCurrentPage","pageSize","isBuyModalVisible","setIsBuyModalVisible","selectedNft","setSelectedNft","handleFetchNfts","undefined","selectedRarity","response","getAccountResource","nftList","data","hexToUint8Array","hexString","bytes","Uint8Array","length","i","parseInt","substr","decodedNfts","map","nft","name","TextDecoder","decode","description","uri","price","filteredNfts","filter","for_sale","error","console","handleBuyClick","handleCancelBuy","handleConfirmPurchase","priceInOctas","entryFunctionPayload","type","function","type_arguments","arguments","id","toString","window","aptos","waitForTransaction","hash","success","log","paginatedNfts","style","textAlign","display","flexDirection","alignItems","children","level","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","Group","value","onChange","e","target","buttonStyle","gutter","marginTop","width","justifyContent","flexWrap","xs","sm","md","lg","xl","hoverable","maxWidth","margin","cover","alt","src","actions","onClick","color","fontSize","fontWeight","title","owner","current","total","page","visible","onCancel","footer","_c","$RefreshReg$"],"sources":["/workspaces/aptos4-q2/src/pages/MarketView.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Typography, Radio, message, Card, Row, Col, Pagination, Tag, Button, Modal } from \"antd\";\nimport { AptosClient } from \"aptos\";\nimport { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n\nconst { Title } = Typography;\nconst { Meta } = Card;\n\nconst client = new AptosClient(\"https://fullnode.devnet.aptoslabs.com/v1\");\n\ntype NFT = {\n  id: number;\n  owner: string;\n  name: string;\n  description: string;\n  uri: string;\n  price: number;\n  for_sale: boolean;\n  rarity: number;\n};\n\ninterface MarketViewProps {\n  marketplaceAddr: string;\n}\n\nconst rarityColors: { [key: number]: string } = {\n  1: \"green\",\n  2: \"blue\",\n  3: \"purple\",\n  4: \"orange\",\n};\n\nconst rarityLabels: { [key: number]: string } = {\n  1: \"Common\",\n  2: \"Uncommon\",\n  3: \"Rare\",\n  4: \"Super Rare\",\n};\n\nconst truncateAddress = (address: string, start = 6, end = 4) => {\n  return `${address.slice(0, start)}...${address.slice(-end)}`;\n};\n\nconst MarketView: React.FC<MarketViewProps> = ({ marketplaceAddr }) => {\n  const { signAndSubmitTransaction } = useWallet();\n  const [nfts, setNfts] = useState<NFT[]>([]);\n  const [rarity, setRarity] = useState<'all' | number>('all');\n  const [currentPage, setCurrentPage] = useState(1);\n  const pageSize = 8;\n\n  const [isBuyModalVisible, setIsBuyModalVisible] = useState(false);\n  const [selectedNft, setSelectedNft] = useState<NFT | null>(null);\n\n  useEffect(() => {\n    handleFetchNfts(undefined);\n  }, []);\n\n  const handleFetchNfts = async (selectedRarity: number | undefined) => {\n    try {\n        const response = await client.getAccountResource(\n            marketplaceAddr,\n            \"0xd6fec6c68926c0da0ec99aac9318eb234c2774be6457dd97c73c0e33de8d29c4::NFTMarketplace::Marketplace\"\n        );\n        const nftList = (response.data as { nfts: NFT[] }).nfts;\n\n        const hexToUint8Array = (hexString: string): Uint8Array => {\n            const bytes = new Uint8Array(hexString.length / 2);\n            for (let i = 0; i < hexString.length; i += 2) {\n                bytes[i / 2] = parseInt(hexString.substr(i, 2), 16);\n            }\n            return bytes;\n        };\n\n        const decodedNfts = nftList.map((nft) => ({\n            ...nft,\n            name: new TextDecoder().decode(hexToUint8Array(nft.name.slice(2))),\n            description: new TextDecoder().decode(hexToUint8Array(nft.description.slice(2))),\n            uri: new TextDecoder().decode(hexToUint8Array(nft.uri.slice(2))),\n            price: nft.price / 100000000,\n        }));\n\n        // Filter NFTs based on `for_sale` property and rarity if selected\n        const filteredNfts = decodedNfts.filter((nft) => nft.for_sale && (selectedRarity === undefined || nft.rarity === selectedRarity));\n\n        setNfts(filteredNfts);\n        setCurrentPage(1);\n    } catch (error) {\n        console.error(\"Error fetching NFTs by rarity:\", error);\n        message.error(\"Failed to fetch NFTs.\");\n    }\n};\n\n  const handleBuyClick = (nft: NFT) => {\n    setSelectedNft(nft);\n    setIsBuyModalVisible(true);\n  };\n\n  const handleCancelBuy = () => {\n    setIsBuyModalVisible(false);\n    setSelectedNft(null);\n  };\n\n  const handleConfirmPurchase = async () => {\n    if (!selectedNft) return;\n  \n    try {\n      const priceInOctas = selectedNft.price * 100000000;\n  \n      const entryFunctionPayload = {\n        type: \"entry_function_payload\",\n        function: `${marketplaceAddr}::NFTMarketplace::purchase_nft`,\n        type_arguments: [],\n        arguments: [marketplaceAddr, selectedNft.id.toString(), priceInOctas.toString()],\n      };\n  \n      const response = await (window as any).aptos.signAndSubmitTransaction(entryFunctionPayload);\n      await client.waitForTransaction(response.hash);\n  \n      message.success(\"NFT purchased successfully!\");\n      setIsBuyModalVisible(false);\n      handleFetchNfts(rarity === 'all' ? undefined : rarity); // Refresh NFT list\n      console.log(\"signAndSubmitTransaction:\", signAndSubmitTransaction);\n    } catch (error) {\n      console.error(\"Error purchasing NFT:\", error);\n      message.error(\"Failed to purchase NFT.\");\n    }\n  };\n\n  const paginatedNfts = nfts.slice((currentPage - 1) * pageSize, currentPage * pageSize);\n\n  return (\n    <div\n      style={{  \n        textAlign: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <Title level={2} style={{ marginBottom: \"20px\" }}>Marketplace</Title>\n  \n      {/* Filter Buttons */}\n      <div style={{ marginBottom: \"20px\" }}>\n        <Radio.Group\n          value={rarity}\n          onChange={(e) => {\n            const selectedRarity = e.target.value;\n            setRarity(selectedRarity);\n            handleFetchNfts(selectedRarity === 'all' ? undefined : selectedRarity);\n          }}\n          buttonStyle=\"solid\"\n        >\n          <Radio.Button value=\"all\">All</Radio.Button>\n          <Radio.Button value={1}>Common</Radio.Button>\n          <Radio.Button value={2}>Uncommon</Radio.Button>\n          <Radio.Button value={3}>Rare</Radio.Button>\n          <Radio.Button value={4}>Super Rare</Radio.Button>\n        </Radio.Group>\n      </div>\n  \n      {/* Card Grid */}\n      <Row\n        gutter={[24, 24]}\n        style={{\n          marginTop: 20,\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\", // Center row content\n          flexWrap: \"wrap\",\n        }}\n      >\n        {paginatedNfts.map((nft) => (\n          <Col\n            key={nft.id}\n            xs={24} sm={12} md={8} lg={6} xl={6}\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\", // Center the single card horizontally\n              alignItems: \"center\", // Center content in both directions\n            }}\n          >\n            <Card\n              hoverable\n              style={{\n                width: \"100%\", // Make the card responsive\n                maxWidth: \"240px\", // Limit the card width on larger screens\n                margin: \"0 auto\",\n              }}\n              cover={<img alt={nft.name} src={nft.uri} />}\n              actions={[\n                <Button type=\"link\" onClick={() => handleBuyClick(nft)}>\n                  Buy\n                </Button>\n              ]}\n            >\n              {/* Rarity Tag */}\n              <Tag\n                color={rarityColors[nft.rarity]}\n                style={{ fontSize: \"14px\", fontWeight: \"bold\", marginBottom: \"10px\" }}\n              >\n                {rarityLabels[nft.rarity]}\n              </Tag>\n  \n              <Meta title={nft.name} description={`Price: ${nft.price} APT`} />\n              <p>{nft.description}</p>\n              <p>ID: {nft.id}</p>\n              <p>Owner: {truncateAddress(nft.owner)}</p>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n  \n      {/* Pagination */}\n      <div style={{ marginTop: 30, marginBottom: 30 }}>\n        <Pagination\n          current={currentPage}\n          pageSize={pageSize}\n          total={nfts.length}\n          onChange={(page) => setCurrentPage(page)}\n          style={{ display: \"flex\", justifyContent: \"center\" }}\n        />\n      </div>\n  \n      {/* Buy Modal */}\n      <Modal\n        title=\"Purchase NFT\"\n        visible={isBuyModalVisible}\n        onCancel={handleCancelBuy}\n        footer={[\n          <Button key=\"cancel\" onClick={handleCancelBuy}>\n            Cancel\n          </Button>,\n          <Button key=\"confirm\" type=\"primary\" onClick={handleConfirmPurchase}>\n            Confirm Purchase\n          </Button>,\n        ]}\n      >\n        {selectedNft && (\n          <>\n            <p><strong>NFT ID:</strong> {selectedNft.id}</p>\n            <p><strong>Name:</strong> {selectedNft.name}</p>\n            <p><strong>Description:</strong> {selectedNft.description}</p>\n            <p><strong>Rarity:</strong> {rarityLabels[selectedNft.rarity]}</p>\n            <p><strong>Price:</strong> {selectedNft.price} APT</p>\n            <p><strong>Owner:</strong> {truncateAddress(selectedNft.owner)}</p>\n          </>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default MarketView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}