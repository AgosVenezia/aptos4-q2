{"ast":null,"code":"import { c as n } from \"./chunk-BVVHGSWC.mjs\";\nimport { o as g, t as d } from \"./chunk-VHNX2NUR.mjs\";\nimport { b as s } from \"./chunk-KM6UXNC7.mjs\";\nasync function m(e) {\n  let {\n      aptosConfig: t,\n      poolAddress: o\n    } = e,\n    r = s.from(o).toStringLong(),\n    i = await n({\n      aptosConfig: t,\n      query: {\n        query: d,\n        variables: {\n          where_condition: {\n            pool_address: {\n              _eq: r\n            }\n          }\n        }\n      }\n    });\n  return i.num_active_delegator_per_pool[0] ? i.num_active_delegator_per_pool[0].num_active_delegator : 0;\n}\nasync function f(e) {\n  let {\n      aptosConfig: t,\n      options: o\n    } = e,\n    r = {\n      query: d,\n      variables: {\n        order_by: o?.orderBy\n      }\n    };\n  return (await n({\n    aptosConfig: t,\n    query: r\n  })).num_active_delegator_per_pool;\n}\nasync function A(e) {\n  let {\n      aptosConfig: t,\n      delegatorAddress: o,\n      poolAddress: r\n    } = e,\n    a = {\n      query: g,\n      variables: {\n        delegatorAddress: s.from(o).toStringLong(),\n        poolAddress: s.from(r).toStringLong()\n      }\n    };\n  return (await n({\n    aptosConfig: t,\n    query: a\n  })).delegated_staking_activities;\n}\nexport { m as a, f as b, A as c };\n//# sourceMappingURL=chunk-XFY4O2S3.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}